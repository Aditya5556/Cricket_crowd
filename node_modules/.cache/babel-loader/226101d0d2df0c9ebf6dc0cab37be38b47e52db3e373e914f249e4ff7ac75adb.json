{"ast":null,"code":"// api/story-submit.js - Updated with JSON storage\nconst fs=require('fs').promises;const path=require('path');const STORIES_FILE=path.join(__dirname,'..','data','stories.json');// Ensure data directory exists\nasync function ensureDataDir(){const dataDir=path.join(__dirname,'..','data');try{await fs.access(dataDir);}catch(_unused){await fs.mkdir(dataDir,{recursive:true});}}// Read existing stories\nasync function readStories(){try{await ensureDataDir();const data=await fs.readFile(STORIES_FILE,'utf8');return JSON.parse(data);}catch(error){return[];// Return empty array if file doesn't exist\n}}// Write stories to file\nasync function writeStories(stories){await ensureDataDir();await fs.writeFile(STORIES_FILE,JSON.stringify(stories,null,2));}exports.handler=async(event,context)=>{if(event.httpMethod!=='POST'){return{statusCode:405,headers:{'Access-Control-Allow-Origin':'*'},body:JSON.stringify({error:'Method Not Allowed'})};}try{const{name,email,date,story}=JSON.parse(event.body);// Validate input\nif(!name||!email||!date||!story){return{statusCode:400,headers:{'Access-Control-Allow-Origin':'*'},body:JSON.stringify({error:'All fields are required'})};}// Read existing stories\nconst stories=await readStories();// Create new story object\nconst newStory={id:\"story-\".concat(Date.now()),name:name.trim(),email:email.trim(),date:date,story:story.trim(),votes:0,boosted:false,createdAt:new Date().toISOString(),excerpt:story.trim().substring(0,150)+(story.length>150?'...':'')};// Add to stories array\nstories.unshift(newStory);// Add at beginning for newest first\n// Keep only last 100 stories to prevent file from getting too large\nif(stories.length>100){stories.splice(100);}// Save back to file\nawait writeStories(stories);return{statusCode:200,headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'},body:JSON.stringify({success:true,message:'Story submitted successfully',id:newStory.id,story:newStory})};}catch(error){console.error('Story submission error:',error);return{statusCode:500,headers:{'Access-Control-Allow-Origin':'*'},body:JSON.stringify({error:'Failed to submit story',message:process.env.NODE_ENV==='development'?error.message:'Internal server error'})};}};// api/get-stories.js - New endpoint to fetch all stories\nexports.handler=async(event,context)=>{if(event.httpMethod!=='GET'){return{statusCode:405,headers:{'Access-Control-Allow-Origin':'*'},body:JSON.stringify({error:'Method Not Allowed'})};}try{const stories=await readStories();// Get query parameters for pagination\nconst url=new URL(event.rawUrl);const page=parseInt(url.searchParams.get('page'))||1;const limit=parseInt(url.searchParams.get('limit'))||10;const offset=(page-1)*limit;// Paginate results\nconst paginatedStories=stories.slice(offset,offset+limit);return{statusCode:200,headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'},body:JSON.stringify({stories:paginatedStories,pagination:{page,limit,total:stories.length,totalPages:Math.ceil(stories.length/limit)}})};}catch(error){console.error('Get stories error:',error);return{statusCode:500,headers:{'Access-Control-Allow-Origin':'*'},body:JSON.stringify({error:'Failed to fetch stories'})};}};","map":{"version":3,"names":["fs","require","promises","path","STORIES_FILE","join","__dirname","ensureDataDir","dataDir","access","_unused","mkdir","recursive","readStories","data","readFile","JSON","parse","error","writeStories","stories","writeFile","stringify","exports","handler","event","context","httpMethod","statusCode","headers","body","name","email","date","story","newStory","id","concat","Date","now","trim","votes","boosted","createdAt","toISOString","excerpt","substring","length","unshift","splice","success","message","console","process","env","NODE_ENV","url","URL","rawUrl","page","parseInt","searchParams","get","limit","offset","paginatedStories","slice","pagination","total","totalPages","Math","ceil"],"sources":["/Users/khajamoinuddinkhadri/Documents/Projects/Web_Projects/crickettales-staging/src/components/StorySubmit.js"],"sourcesContent":["// api/story-submit.js - Updated with JSON storage\nconst fs = require('fs').promises;\nconst path = require('path');\n\nconst STORIES_FILE = path.join(__dirname, '..', 'data', 'stories.json');\n\n// Ensure data directory exists\nasync function ensureDataDir() {\n  const dataDir = path.join(__dirname, '..', 'data');\n  try {\n    await fs.access(dataDir);\n  } catch {\n    await fs.mkdir(dataDir, { recursive: true });\n  }\n}\n\n// Read existing stories\nasync function readStories() {\n  try {\n    await ensureDataDir();\n    const data = await fs.readFile(STORIES_FILE, 'utf8');\n    return JSON.parse(data);\n  } catch (error) {\n    return []; // Return empty array if file doesn't exist\n  }\n}\n\n// Write stories to file\nasync function writeStories(stories) {\n  await ensureDataDir();\n  await fs.writeFile(STORIES_FILE, JSON.stringify(stories, null, 2));\n}\n\nexports.handler = async (event, context) => {\n  if (event.httpMethod !== 'POST') {\n    return {\n      statusCode: 405,\n      headers: { 'Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify({ error: 'Method Not Allowed' })\n    };\n  }\n\n  try {\n    const { name, email, date, story } = JSON.parse(event.body);\n\n    // Validate input\n    if (!name || !email || !date || !story) {\n      return {\n        statusCode: 400,\n        headers: { 'Access-Control-Allow-Origin': '*' },\n        body: JSON.stringify({ error: 'All fields are required' })\n      };\n    }\n\n    // Read existing stories\n    const stories = await readStories();\n\n    // Create new story object\n    const newStory = {\n      id: `story-${Date.now()}`,\n      name: name.trim(),\n      email: email.trim(),\n      date: date,\n      story: story.trim(),\n      votes: 0,\n      boosted: false,\n      createdAt: new Date().toISOString(),\n      excerpt: story.trim().substring(0, 150) + (story.length > 150 ? '...' : '')\n    };\n\n    // Add to stories array\n    stories.unshift(newStory); // Add at beginning for newest first\n\n    // Keep only last 100 stories to prevent file from getting too large\n    if (stories.length > 100) {\n      stories.splice(100);\n    }\n\n    // Save back to file\n    await writeStories(stories);\n\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        success: true,\n        message: 'Story submitted successfully',\n        id: newStory.id,\n        story: newStory\n      })\n    };\n\n  } catch (error) {\n    console.error('Story submission error:', error);\n    return {\n      statusCode: 500,\n      headers: { 'Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify({\n        error: 'Failed to submit story',\n        message: process.env.NODE_ENV === 'development' ? error.message : 'Internal server error'\n      })\n    };\n  }\n};\n\n// api/get-stories.js - New endpoint to fetch all stories\nexports.handler = async (event, context) => {\n  if (event.httpMethod !== 'GET') {\n    return {\n      statusCode: 405,\n      headers: { 'Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify({ error: 'Method Not Allowed' })\n    };\n  }\n\n  try {\n    const stories = await readStories();\n\n    // Get query parameters for pagination\n    const url = new URL(event.rawUrl);\n    const page = parseInt(url.searchParams.get('page')) || 1;\n    const limit = parseInt(url.searchParams.get('limit')) || 10;\n    const offset = (page - 1) * limit;\n\n    // Paginate results\n    const paginatedStories = stories.slice(offset, offset + limit);\n\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        stories: paginatedStories,\n        pagination: {\n          page,\n          limit,\n          total: stories.length,\n          totalPages: Math.ceil(stories.length / limit)\n        }\n      })\n    };\n\n  } catch (error) {\n    console.error('Get stories error:', error);\n    return {\n      statusCode: 500,\n      headers: { 'Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify({\n        error: 'Failed to fetch stories'\n      })\n    };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}